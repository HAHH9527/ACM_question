1. 15
2. 27
  【错误原因：int相乘，得到的答案只是int，超出范围，要改为long 正确答案：36】
3. 
  【未写原因：未理解递归 正确答案：0.58198】
4. return v.size()
  【错误原因：未考虑循环不在第一位小数的情况 正确答案：return v.size() - v.indexOf(n)】
5. 
  【未写原因：没理解API 正确答案："%"+(width-s.length()-2)/2+"s%s%"+((width-s.length()-2)/2)+"s"】
6. 69
7. 16
8. 
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	int w = sc.nextInt();
	int w2 = w * 2;
	int m = sc.nextInt();
	int n = sc.nextInt();

	// 行位置
	int mw = 0;
	int nw = 0;
	if (m % w2 == 0) {
	    mw = 1;
	} else if (m % w2 < w) {
	    mw = m % w;
	} else if (m % w == 0) {
	    mw = w;
	} else {
	    mw = w - (m % w) + 1;
	}
	if (n % w2 == 0) {
	    nw = 1;
	} else if (n % w2 < w) {
	    nw = n % w;
	} else if (n % w == 0) {
	    nw = w;
	} else {
	    nw = w - (n % w) + 1;
	}
	int wight = Math.abs(mw - nw);

	// 列位置
	int mh = 0;
	int nh = 0;
	if (m % w == 0) {
	    mh = m / w;
	} else {
	    mh = m / w + 1;
	}
	if (n % w == 0) {
	    nh = n / w;
	} else {
	    nh = n / w + 1;
	}
	int hight = Math.abs(mh - nh);

	// 结果
	System.out.println(wight + hight);
    }
}
9. 
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	while (sc.hasNext()) {
	    int m = sc.nextInt();
	    int n = sc.nextInt();
	    display(m, n);
	}
    }

    public static void display(int m, int n) {
	int wight = n + m - 1;
	for (int i = 0; i < n / 2; i++) {
	    for (int j = 0; j < i; j++) {
		System.out.print(".");
	    }
	    if (wight - 2 * m - 2 * i < 1) {
		for (int j = 0; j < wight - 2 * i; j++) {
		    System.out.print("*");
		}
	    } else {
		for (int j = 0; j < m; j++) {
		    System.out.print("*");
		}
		for (int j = 0; j < wight - 2 * m - 2 * i; j++) {
		    System.out.print(".");
		}
		for (int j = 0; j < m; j++) {
		    System.out.print("*");
		}
	    }
	    for (int j = 0; j < i; j++) {
		System.out.print(".");
	    }
	    System.out.println();
	}
	for (int i = 0; i < (wight - m) / 2; i++) {
	    System.out.print(".");
	}
	for (int i = 0; i < m; i++) {
	    System.out.print("*");
	}
	for (int i = 0; i < (wight - m) / 2; i++) {
	    System.out.print(".");
	}
	System.out.println();
	for (int i = n / 2 - 1; i >= 0; i--) {
	    for (int j = 0; j < i; j++) {
		System.out.print(".");
	    }
	    if (wight - 2 * m - 2 * i < 1) {
		for (int j = 0; j < wight - 2 * i; j++) {
		    System.out.print("*");
		}
	    } else {
		for (int j = 0; j < m; j++) {
		    System.out.print("*");
		}
		for (int j = 0; j < wight - 2 * m - 2 * i; j++) {
		    System.out.print(".");
		}
		for (int j = 0; j < m; j++) {
		    System.out.print("*");
		}
	    }
	    for (int j = 0; j < i; j++) {
		System.out.print(".");
	    }
	    System.out.println();
	}
    }
}
